% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_tree.R
\name{read_tree}
\alias{read_tree}
\title{Read a single tree point cloud}
\usage{
read_tree(tree_source, verbose = TRUE, ...)
}
\arguments{
\item{tree_source}{object that inherits from class data.frame, or character
path to point cloud of individual tree or a whole plot either in las/laz
format or any file format readable with \code{\link[data.table:fread]{data.table::fread()}}. If provided
with a point cloud object in a data.frame, the structure and column names
are validated and homogenized; else, the function tries to read the point
cloud in the specified path}

\item{verbose}{logical of length 1. Should information about progress be
printed? Defaults to TRUE.}

\item{...}{additional arguments passed on to \code{\link[data.table:fread]{data.table::fread()}}}
}
\value{
object of class c("tree_pc", "data.frame") with x, y and z
coordinates of the tree or forest point cloud
}
\description{
Read point cloud sourced from a file path or an object that
inherits from class data.frame.
}
\details{
Function for reading and validating point cloud data. Currently, the
supported formats are las/laz and any formats readable with
\code{\link[data.table:fread]{data.table::fread()}}. For other formats, please load the point cloud data
separately and enter the coordinates as a data.frame.

If provided with tabular data (either as a data.frame or via a path to an
\code{\link[data.table:fread]{data.table::fread()}} readable source), the function by default takes the
columns named "X", "Y", and "Z" or "x", "y", and "z" to be the coordinate
vectors.
If no columns with matching names are available, it takes the first three
numeric columns and returns a message. If the dataset does not contain
three numeric columns or one of the columns labeled x, y, and z is not
numeric, the function fails with an error.
}
\examples{
\dontrun{
# Read the tree point cloud in txt format
tree <- read_tree(path = "path/to/tree_point_cloud.txt")
# Read the tree point cloud in las or laz format
tree <- read_tree(path = "path/to/tree_point_cloud.las")
}
}
